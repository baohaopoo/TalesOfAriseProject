#pragma once
#include "Client_Defines.h"
#include "Player.h"

BEGIN(Client)

class CAlphen final : public CPlayer

{


#pragma region Player State
	enum ARI_ANIM_STATE
	{
		ARI_ANIM_BTL_ADVENT,
		ARI_ANIM_BTL_ARISE_B,
		ARI_ANIM_BTL_ARISE_F,
		ARI_ANIM_BTL_ATTACK_AKISAZAME,
		ARI_ANIM_BTL_ATTACK_BAKUSAIZAN,
		ARI_ANIM_BTL_ATTACK_DANKUUKEN,
		ARI_ANIM_BTL_ATTACK_ENGETU,
		ARI_ANIM_BTL_ATTACK_FLASH2,
		ARI_ANIM_BTL_ATTACK_FLASH_AIR,
		ARI_ANIM_BTL_ATTACK_FLASH_LOOP,
		ARI_ANIM_BTL_ATTACK_GOUHAZAN,
		ARI_ANIM_BTL_ATTACK_GOUKABAKUENNZIN_END,
		ARI_ANIM_BTL_ATTACK_GOUKABAKUENNZIN_LOOP,
		ARI_ANIM_BTL_ATTACK_GOUKABAKUENNZIN_START,
		ARI_ANIM_BTL_ATTACK_HADOUMEPPU_END,
		ARI_ANIM_BTL_ATTACK_HADOUMEPPU_LOOP,
		ARI_ANIM_BTL_ATTACK_HADOUMEPPU_START,
		ARI_ANIM_BTL_ATTACK_HIENZIN,
		ARI_ANIM_BTL_ATTACK_HITENSYOUKU_END,
		ARI_ANIM_BTL_ATTACK_HITENSYOUKU_LOOP,
		ARI_ANIM_BTL_ATTACK_HITENSYOUKU_START,
		ARI_ANIM_BTL_ATTACK_HOUOUTENKU_END,
		ARI_ANIM_BTL_ATTACK_HOUOUTENKU_LOOP,
		ARI_ANIM_BTL_ATTACK_HOUOUTENKU_START,
		ARI_ANIM_BTL_ATTACK_HOUSYUGEKI,
		ARI_ANIM_BTL_ATTACK_HOUSYUTIGAKUZIN,
		ARI_ANIM_BTL_ATTACK_HUZINKEN,
		ARI_ANIM_BTL_ATTACK_KAGEROU_END,
		ARI_ANIM_BTL_ATTACK_KAGEROU_LOOP,
		ARI_ANIM_BTL_ATTACK_KAGEROU_START,
		ARI_ANIM_BTL_ATTACK_KUHAZESYOUGEKI,
		ARI_ANIM_BTL_ATTACK_MAOUENGEKIHA_END2,
		ARI_ANIM_BTL_ATTACK_MAOUENGEKIHA_LOOP2,
		ARI_ANIM_BTL_ATTACK_MAOUENGEKIHA_START2,
		ARI_ANIM_BTL_ATTACK_MAZINKEN,
		ARI_ANIM_BTL_ATTACK_MAZINKEN_SOUGA,
		ARI_ANIM_BTL_ATTACK_NEPPASENPUUZIN_END,
		ARI_ANIM_BTL_ATTACK_NEPPASENPUUZIN_LOOP,
		ARI_ANIM_BTL_ATTACK_NEPPASENPUUZIN_START,
		ARI_ANIM_BTL_ATTACK_NEPPASENPUUZIN_START_END,
		ARI_ANIM_BTL_ATTACK_NEPPASENPUUZIN_START_LOOP,
		ARI_ANIM_BTL_ATTACK_NORMAL_0,
		ARI_ANIM_BTL_ATTACK_NORMAL_1,
		ARI_ANIM_BTL_ATTACK_NORMAL_6,
		ARI_ANIM_BTL_ATTACK_NORMAL_7,
		ARI_ANIM_BTL_ATTACK_NORMAL_8,
		ARI_ANIM_BTL_ATTACK_NORMAL_AIR_0,
		ARI_ANIM_BTL_ATTACK_NORMAL_AIR_1,
		ARI_ANIM_BTL_ATTACK_NORMAL_AIR_2,
		ARI_ANIM_BTL_ATTACK_NORMAL_AIR_3,
		ARI_ANIM_BTL_ATTACK_NORMAL_AIR_4,
		ARI_ANIM_BTL_ATTACK_PRE_SMASH_AIR_LOOP,
		ARI_ANIM_BTL_ATTACK_PRE_SMASH_AIR_START,
		ARI_ANIM_BTL_ATTACK_PRE_SMASH_LOOP,
		ARI_ANIM_BTL_ATTACK_PRE_SMASH_START,
		ARI_ANIM_BTL_ATTACK_RAIGAISEN,
		ARI_ANIM_BTL_ATTACK_RESYOUSEN_END,
		ARI_ANIM_BTL_ATTACK_RESYOUSEN_LOOP,
		ARI_ANIM_BTL_ATTACK_RESYOUSEN_START,
		ARI_ANIM_BTL_ATTACK_RYUUSEIZIN,
		ARI_ANIM_BTL_ATTACK_SENKUKEN,
		ARI_ANIM_BTL_ATTACK_SENKUSYOUREPA,
		ARI_ANIM_BTL_ATTACK_SHIDENMETTENSYOU,
		ARI_ANIM_BTL_ATTACK_SHOUOUSIN,
		ARI_ANIM_BTL_ATTACK_SHOURYURENGAZAN,
		ARI_ANIM_BTL_ATTACK_SHUNRAI,
		ARI_ANIM_BTL_ATTACK_SINKUSOUENZIN,
		ARI_ANIM_BTL_ATTACK_SOUHATSUIREN,
		ARI_ANIM_BTL_ATTACK_SOURYUSATU,
		ARI_ANIM_BTL_ATTACK_SPECIAL_LANDING,
		ARI_ANIM_BTL_ATTACK_STRIKE,
		ARI_ANIM_BTL_ATTACK_STRIKE_AIR,
		ARI_ANIM_BTL_ATTACK_STRIKE_AIR_SUB,
		ARI_ANIM_BTL_ATTACK_STRIKE_NO_FIRE,
		ARI_ANIM_BTL_ATTACK_STRIKE_NO_FIRE_AIR,
		ARI_ANIM_BTL_ATTACK_STRIKE_NO_FIRE_AIR_SUB,
		ARI_ANIM_BTL_ATTACK_STRIKE_NO_FIRE_START,
		ARI_ANIM_BTL_ATTACK_STRIKE_NO_FIRE_SUB,
		ARI_ANIM_BTL_ATTACK_STRIKE_START,
		ARI_ANIM_BTL_ATTACK_STRIKE_SUB,
		ARI_ANIM_BTL_ATTACK_SYUNZINKEN,
		ARI_ANIM_BTL_ATTACK_TESSETUZAN,
		ARI_ANIM_BTL_ATTACK_TESSETUZAN_COUNTER,
		ARI_ANIM_BTL_ATTACK_YAMATANOOROCHI,
		ARI_ANIM_BTL_ATTACK_ZINRAIHOUSYUGEKI,
		ARI_ANIM_BTL_BLOW_DOWN_B,
		ARI_ANIM_BTL_BLOW_DOWN_F,
		ARI_ANIM_BTL_BLOW_MIGHTY,
		ARI_ANIM_BTL_BLOW_UP_B,
		ARI_ANIM_BTL_BLOW_UP_F,
		ARI_ANIM_BTL_DAMAGE_AIR_LARGE_B,
		ARI_ANIM_BTL_DAMAGE_AIR_LARGE_F,
		ARI_ANIM_BTL_DAMAGE_AIR_LARGE_L,
		ARI_ANIM_BTL_DAMAGE_AIR_LARGE_R,
		ARI_ANIM_BTL_DAMAGE_AIR_LOOP,
		ARI_ANIM_BTL_DAMAGE_AIR_SMALL_B,
		ARI_ANIM_BTL_DAMAGE_AIR_SMALL_F,
		ARI_ANIM_BTL_DAMAGE_AIR_SMALL_L,
		ARI_ANIM_BTL_DAMAGE_AIR_SMALL_R,
		ARI_ANIM_BTL_DAMAGE_LARGE_B,
		ARI_ANIM_BTL_DAMAGE_LARGE_F,
		ARI_ANIM_BTL_DAMAGE_LARGE_L,
		ARI_ANIM_BTL_DAMAGE_LARGE_R,
		ARI_ANIM_BTL_DAMAGE_LOOP,
		ARI_ANIM_BTL_DAMAGE_SMALL_B,
		ARI_ANIM_BTL_DAMAGE_SMALL_F,
		ARI_ANIM_BTL_DAMAGE_SMALL_L,
		ARI_ANIM_BTL_DAMAGE_SMALL_R,
		ARI_ANIM_BTL_DEAD,
		ARI_ANIM_BTL_DOWN_B,
		ARI_ANIM_BTL_DOWN_F,
		ARI_ANIM_BTL_DOWN_UNIQUE,
		ARI_ANIM_BTL_FALL,
		ARI_ANIM_BTL_GUARD_HIT,
		ARI_ANIM_BTL_GUARD_LOOP,
		ARI_ANIM_BTL_GUARD_START,
		ARI_ANIM_BTL_GUARD_WALK_B,
		ARI_ANIM_BTL_GUARD_WALK_F,
		ARI_ANIM_BTL_GUARD_WALK_L,
		ARI_ANIM_BTL_GUARD_WALK_R,
		ARI_ANIM_BTL_ITEM,
		ARI_ANIM_BTL_JUMP,
		ARI_ANIM_BTL_LAND,
		ARI_ANIM_BTL_MOVE_BRAKE,
		ARI_ANIM_BTL_MOVE_IDLE,
		ARI_ANIM_BTL_MOVE_RUN,
		ARI_ANIM_BTL_MOVE_WALK_B,
		ARI_ANIM_BTL_MOVE_WALK_F,
		ARI_ANIM_BTL_MOVE_WALK_L,
		ARI_ANIM_BTL_MOVE_WALK_R,
		ARI_ANIM_BTL_MYSTIC_HIENSYOU_KAI,
		ARI_ANIM_BTL_MYSTIC_SHAKUENROU_HOMURA_000,
		ARI_ANIM_BTL_MYSTIC_SHAKUENROU_HOMURA_001,
		ARI_ANIM_BTL_MYSTIC_SHAKUENROU_HOMURA_LAST_000,
		ARI_ANIM_BTL_MYSTIC_SHAKUENROU_HOMURA_LAST_001,
		ARI_ANIM_BTL_MYSTIC_SHAKUENROU_HOMURA_LAST_002,
		ARI_ANIM_BTL_MYSTIC_SHAKUENROU_HOMURA_LAST_003,
		ARI_ANIM_BTL_REACT,
		ARI_ANIM_BTL_STEP_AIR,
		ARI_ANIM_BTL_STEP_LAND,
		ARI_ANIM_BTL_STEP_LAND_BACK,
		ARI_ANIM_SYS_ADD_DASH_WEIGHT_LEFT,
		ARI_ANIM_SYS_ADD_DASH_WEIGHT_RIGHT,
		ARI_ANIM_SYS_ADD_IDLE_WEIGHT,
		ARI_ANIM_SYS_ADD_RUN_WEIGHT,
		ARI_ANIM_SYS_ADD_RUN_WEIGHT_LEFT,
		ARI_ANIM_SYS_ADD_RUN_WEIGHT_RIGHT,
		ARI_ANIM_SYS_ADD_WALK_WEIGHT_LEFT,
		ARI_ANIM_SYS_ADD_WALK_WEIGHT_RIGHT,
		ARI_ANIM_SYS_BRAKE_WALL,
		ARI_ANIM_SYS_DASH,
		ARI_ANIM_SYS_DASH_BRAKE_LEFT_000,
		ARI_ANIM_SYS_DASH_BRAKE_LEFT_001,
		ARI_ANIM_SYS_DASH_UTURN_LEFT,
		ARI_ANIM_SYS_DASH_WARPING_LEFT,
		ARI_ANIM_SYS_DASH_WARPING_RIGHT,
		ARI_ANIM_SYS_DIVE_AIR,
		ARI_ANIM_SYS_DOOR_OPEN_HAND_BOTH,
		ARI_ANIM_SYS_DOOR_OPEN_HAND_RIGHT,
		ARI_ANIM_SYS_IDLE,
		ARI_ANIM_SYS_IDLE_CHARA,
		ARI_ANIM_SYS_IDLE_FREE_000,
		ARI_ANIM_SYS_IDLE_FREE_001,
		ARI_ANIM_SYS_IDLE_FREE_002,
		ARI_ANIM_SYS_IDLE_FREE_003,
		ARI_ANIM_SYS_IDLE_FREE_004,
		ARI_ANIM_SYS_IDLE_FREE_BATTLE,
		ARI_ANIM_SYS_IDLE_FREE_COLD,
		ARI_ANIM_SYS_IDLE_FREE_FAV,
		ARI_ANIM_SYS_IDLE_FREE_FLA_000,
		ARI_ANIM_SYS_IDLE_FREE_FLA_002,
		ARI_ANIM_SYS_IDLE_FREE_HIGH_PLACE,
		ARI_ANIM_SYS_IDLE_FREE_HOT,
		ARI_ANIM_SYS_IDLE_TRANS_IDLE,
		ARI_ANIM_SYS_IDLE_TRANS_IDLE_CHARA,
		ARI_ANIM_SYS_IDLE_TRANS_WALK,
		ARI_ANIM_SYS_JUMP_LANDING,
		ARI_ANIM_SYS_JUMP_LANDING_DAMAGE,
		ARI_ANIM_SYS_JUMP_LANDING_HIGH,
		ARI_ANIM_SYS_JUMP_LOOP,
		ARI_ANIM_SYS_JUMP_RUN_END,
		ARI_ANIM_SYS_JUMP_RUN_LANDING,
		ARI_ANIM_SYS_JUMP_RUN_LANDING_SMART,
		ARI_ANIM_SYS_JUMP_RUN_LOOP,
		ARI_ANIM_SYS_JUMP_RUN_START,
		ARI_ANIM_SYS_JUMP_RUN_TRANS_LADDER,
		ARI_ANIM_SYS_JUMP_START,
		ARI_ANIM_SYS_LADDER_DOWN_END,
		ARI_ANIM_SYS_LADDER_DOWN_LOOP,
		ARI_ANIM_SYS_LADDER_DOWN_START,
		ARI_ANIM_SYS_LADDER_DOWN_TRANS_LADDER_IDLE,
		ARI_ANIM_SYS_LADDER_IDLE,
		ARI_ANIM_SYS_LADDER_IDLE_TRANS_LADDER_DOWN,
		ARI_ANIM_SYS_LADDER_IDLE_TRANS_LADDER_UP,
		ARI_ANIM_SYS_LADDER_TRANS_JUMP_RUN_LOOP,
		ARI_ANIM_SYS_LADDER_UP_EARLY,
		ARI_ANIM_SYS_LADDER_UP_EARLY_TRANS_LADDER_IDLE,
		ARI_ANIM_SYS_LADDER_UP_END,
		ARI_ANIM_SYS_LADDER_UP_LOOP,
		ARI_ANIM_SYS_LADDER_UP_START,
		ARI_ANIM_SYS_LADDER_UP_TRANS_LADDER_IDLE,
		ARI_ANIM_SYS_LOSE_TRANS_IDLE,
		ARI_ANIM_SYS_MAP_GIMMICK_01,
		ARI_ANIM_SYS_MAP_GIMMICK_02,
		ARI_ANIM_SYS_OBJECT_IDLE,
		ARI_ANIM_SYS_OBJECT_IDLE_TRANS_OBJECT_WALK,
		ARI_ANIM_SYS_OBJECT_RUN,
		ARI_ANIM_SYS_OBJECT_WALK,
		ARI_ANIM_SYS_OBJECT_WALK_TRANS_OBJECT_IDLE,
		ARI_ANIM_SYS_OBJECT_WALK_UTURN_LEFT,
		ARI_ANIM_SYS_RUN,
		ARI_ANIM_SYS_RUN_BRAKE_LEFT_000,
		ARI_ANIM_SYS_RUN_BRAKE_LEFT_001,
		ARI_ANIM_SYS_RUN_UTURN_AROUND_LEFT,
		ARI_ANIM_SYS_RUN_UTURN_LEFT,
		ARI_ANIM_SYS_RUN_WARPING_LEFT,
		ARI_ANIM_SYS_RUN_WARPING_RIGHT,
		ARI_ANIM_SYS_SWIM_DIVE,
		ARI_ANIM_SYS_SWIM_EARLY,
		ARI_ANIM_SYS_SWIM_FLOAT,
		ARI_ANIM_SYS_SWIM_IDLE,
		ARI_ANIM_SYS_SWIM_IDLE_TRANS_SWIM_SLOW,
		ARI_ANIM_SYS_SWIM_SLOW,
		ARI_ANIM_SYS_SWIM_SLOW_TRANS_SWIM_IDLE,
		ARI_ANIM_SYS_SWIM_SLOW_TRANS_WALK,
		ARI_ANIM_SYS_TOUCH_SQUAT,
		ARI_ANIM_SYS_TOUCH_STAND,
		ARI_ANIM_SYS_TREASURE_OPEN,
		ARI_ANIM_SYS_WALK,
		ARI_ANIM_SYS_WALK_TRANS_IDLE_LEFT_000,
		ARI_ANIM_SYS_WALK_TRANS_IDLE_LEFT_001,
		ARI_ANIM_SYS_WALK_TRANS_SWIM_SLOW,
		ARI_ANIM_SYS_WALK_UTURN_LEFT,
		ARI_ANIM_BTL_DFN_MYSTIC_SHAKUENROU_HOMURA_LAST_000,
		ARI_ANIM_BTL_DFN_MYSTIC_SHAKUENROU_HOMURA_LAST_002,
		ARI_ANIM_BTL_DFN_MYSTIC_SHAKUENROU_HOMURA_LAST_003,
		ARI_ANIM_END
	};
	enum ARI_SKILL
	{

		//지상
		SKILL_LIGTHING_THRUST, SKILL_SWALLOW_BLADE, SKILL_DRAGON_SWARM,
		//공중
		SKILL_VOID_FLASH, SKILL_RISING_PALCON, SKILL_HURRICANE_THRUST, SKILL_END



	};


	enum ARI_SKILL_GROUND   //지상 스킬 
	{
		SKILL_GROUND_LIGTHING_THRUST, SKILL_GROUND_SWALLOW_BLADE, SKILL_GROUND_DRAGON_SWARM, SKILL_GROUND_END
	};
	enum ARI_SKILL_AIR    //공중 스킬 
	{
		SKILL_AIR_VOID_FLASH = ARI_SKILL_GROUND::SKILL_GROUND_END, SKILL_AIR_RISING_PALCON, SKILL_AIR_HURRICANE_THRUST, SKILL_AIR_END
	};

	enum ARI_FLAMING_EDGE
	{
		SKILL_FLAMING_EDGE_INFERNO_TORRENT, SKILL_FLAMING_EDGE_RENDING_FLASH,
		SKILL_FLAMING_EDGE_EXPLOSIVE_RING, SKILL_FLAMING_EDGE_INCINERATION_WAVE,
		SKILL_FLAMING_EDGE_RISING_PHOENIX, SKILL_FLAMING_EDGE_SEARING_GALE,
		SKILL_FLAMING_EDGE_END
	};

	enum ARI_AI
	{
		ARI_AI_REVIVE, ARI_AI_CHASE, ARI_AI_EVADE, ARI_AI_MOVE, ARI_AI_HEAL, ARI_AI_GROUNDBATTLE, ARI_AI_AIRBATTLE, ARI_AI_FALL, ARI_AI_END
	};

#pragma endregion

private:
	explicit CAlphen(ID3D11Device* pDeviceOut, ID3D11DeviceContext* pDeviceContextOut);
	explicit CAlphen(const CAlphen& rhs);
	virtual ~CAlphen() = default;

public:
	virtual HRESULT NativeConstruct_Prototype() override;
	virtual HRESULT NativeConstruct(void* pArg);
	virtual void Tick(_double TimeDelta) override;
	virtual void LateTick(_double TimeDelta) override;
	virtual HRESULT Render() override;
	virtual HRESULT Render_LightDepth() override;


private:
	HRESULT SetUp_Components();
	HRESULT SetUp_ConstantTable();
	HRESULT SetUp_ConstantTable_LightDepth();

public:

	void Key_Input();
	void Key_Input_Town();
	void Jump(_double TimeDelta);
	void Evade();
	void Attack(_double TimeDelta);
	void Skill(_double TimeDelta);

	void Compute_Anim(_double TimeDelta);
	void Compute_Move(_double TimeDelta);
	void Compute_Look();
	void Compute_Hit(_double TimeDelta);

	void Compute_Attack(); //콜라이더 온오프,데미지,공격종류등
	void Compute_HitInfo();




public:
	//공중스킬
	void Rising_Palcon();
	void Hurricane_Thrust(_double TimeDelta);
	void Mirage();


	//지상스킬
	void Lightning_Thrust();
	void Swallow_Balde();
	void Dragon_Swarm();



	//플람엣지
	void Infernal_Torrent();
	void Searing_Gale(_double TimeDelta);
	void Risiing_Phoenix();
	void Rending_Flash();
	void Explosive_Ring();


	//AI
	void AI(_double TimeDelta);
	void Pattern_Choice();
	void AirBattle(_double TimeDelta);
	void GroundBattle(_double TimeDelta);
	void Move(_double TimeDelta);
	void Chase(_double TimeDelta);
	void Falling(_double TimeDelta);




public:
	static CAlphen* Create(ID3D11Device* pDeviceOut, ID3D11DeviceContext* pDeviceContextOut);
	virtual CGameObject* Clone(void* pArg) override;
	virtual void Free() override;

private:

	_bool  m_FlamingEdge = false; //플람엣지 사용 가능한지
	_uint m_NumAnim = 0;	// 애니메이션 총 갯수 저장하기 위한 변수

	ARI_SKILL m_eSkillUse = SKILL_END; //지금 사용하는 스킬


	ARI_SKILL_AIR m_eSkillAirFirst = SKILL_AIR_END;
	ARI_SKILL_AIR m_eSkillAirSecond = SKILL_AIR_END;
	ARI_SKILL_AIR m_eSkillAirThird = SKILL_AIR_END;
	ARI_SKILL_GROUND m_eSkillGroundFirst = SKILL_GROUND_END;
	ARI_SKILL_GROUND m_eSkillGroundSecond = SKILL_GROUND_END;
	ARI_SKILL_GROUND m_eSkillGroundThird = SKILL_GROUND_END;


	class CSword* m_pNormalSword = nullptr;
	class CSword* m_pFlamSword = nullptr;
	const char* m_HandBone = "KK_R";
	const char* m_NormalBone = "EX_SWO_00_R";
	const char* m_FlamBone = "EX_SWO_01_R";
	_bool m_bTorrent = false;
	_bool m_bPhoenix = false;
	_bool m_bGale = false;
	_bool m_bRing = false;

	ARI_AI m_ePattern = ARI_AI_END;
};

END